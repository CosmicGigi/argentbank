swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet à un nouvel utilisateur de s'inscrire en envoyant un payload contenant son email, mot de passe, prénom, nom et nom d'utilisateur.

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de récupérer le profil de l'utilisateur connecté. Nécessite un token d'authentification valide dans l'en-tête.

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile Update API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet à un utilisateur connecté de mettre à jour son profil en fournissant les nouveaux attributs.

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions for the current month
      description: Retrieve all transactions for the current month
      produces:
        - application/json
      responses:
        "200":
          description: List of transactions for the current month retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de récupérer toutes les transactions de l'utilisateur pour le mois en cours. Nécessite une authentification.

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieve details of a specific transaction by its unique ID
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de récupérer les détails d'une transaction spécifique en fournissant son ID unique.

  /transactions/{transactionId}/{item}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add category or note to a transaction
      description: Add a new category or note to a transaction
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of transaction
          required: true
          type: string
        - in: path
          name: item
          description: Category or note
          required: true
          type: string
        - in: body
          name: body
          description: New category and note information for the transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionCategoryNote"
      produces:
        - application/json
      responses:
        "200":
          description: The request was successful, the category or note was added correctly
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet d'ajouter une catégorie ou une note à une transaction existante, en fournissant l'ID de la transaction et le contenu de la note.

  /transactions/{transactionId}/notes/{noteId}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a note from a transaction
      description: Delete a note associated with a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: Unique ID of the transaction
          required: true
          type: string
        - in: path
          name: noteId
          description: Unique ID of the note to be deleted
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields or Note cannot be deleted
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de supprimer une note associée à une transaction spécifique en fournissant les IDs de la transaction et de la note.

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get all accounts
      description: Retrieve a list of all accounts associated with the user
      produces:
        - application/json
      responses:
        "200":
          description: List of accounts retrieved successfully
          schema:
            $ref: "#/definitions/AccountsResponse"
        "400":
          description: Invalid request parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de récupérer tous les comptes de l'utilisateur authentifié. Nécessite un token d'authentification valide.

  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get account details
      description: Retrieve details of a specific account by its unique ID
      parameters:
        - in: path
          name: accountId
          description: Unique ID of the account
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Account details retrieved successfully
          schema:
            $ref: "#/definitions/AccountApiResponse"
        "400":
          description: Invalid request parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      # Commentaire : Ce endpoint permet de récupérer les détails d'un compte spécifique en fournissant l'ID du compte.

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
  TransactionsResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/TransactionApiResponse"
  TransactionApiResponse:
    type: object
    properties:
      transactionId:
        type: string
      transactionType:
        type: string
        description: Type of transaction
      amount:
        type: number
        description: Amount of the transaction
      currency:
        type: string
        description: Currency of the transaction
      description:
        type: string
        description: Additional description of the transaction
  TransactionCategoryNote:
    type: object
    properties:
      category:
        type: string
        description: Category for the transaction
      note:
        type: string
        description: Additional note for the transaction
  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  AccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: "#/definitions/AccountApiResponse"
  AccountApiResponse:
    type: object
    properties:
      accountId:
        type: string
      accountNumber:
        type: string
        description: Account number
      accountType:
        type: string
        description: Type of the account
      balance:
        type: number
        description: Current balance of the account
      currency:
        type: string
        description: Currency of the account balance
  UserProfile:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string
